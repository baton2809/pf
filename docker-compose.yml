services:
  # Database
  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pitchforge-network

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - "0.0.0.0:3000:3000"
    env_file:
      - .env
    environment:
      - PITCH_ML_SERVICE_URL=${PITCH_ML_SERVICE_URL}
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./ssl:/app/ssl
    networks:
      - pitchforge-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:3005:3005"
    environment:
      - HTTPS=true
      - HTTPS_CRT_FILE=/app/ssl/cert.pem  
      - HTTPS_KEY_FILE=/app/ssl/key.pem
      - PORT=3005
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./ssl:/app/ssl
    networks:
      - pitchforge-network

# # INTERNAL SPEECH ML SERVICE
#   pitch-ml-service:
#     image: nginx:alpine
#     ports:
#       "0.0.0.0:5001:80"
#     volumes:
#       ./ml-proxy.conf:/etc/nginx/conf.d/default.conf
#     networks:
#       pitchforge-network

volumes:
  postgres_data:

networks:
  pitchforge-network:
    driver: bridge